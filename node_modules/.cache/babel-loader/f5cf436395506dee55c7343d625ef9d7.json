{"ast":null,"code":"var _jsxFileName = \"/home/alias/usfm/landingv1.2/src/components/nav/index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport navdata from \"./json/nav.json\";\nimport DesktopNav from \"./desktop/index\";\nimport MobileNav from \"./mobile/index\";\nimport Home from \"../../pages/home\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Nav() {\n  _s();\n\n  const [navstate, setnavstate] = useState();\n  const [windowstate, setwindowstate] = useState(0);\n  useEffect(() => {\n    async function navinit() {\n      await setnavstate(navdata);\n      await setwindowstate(window.innerWidth);\n    }\n\n    navinit();\n  }, []);\n\n  if (windowstate < 600) {\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(MobileNav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(DesktopNav, {\n        navstate: navstate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), navstate.pages.map((pagelink, index) => {\n        return /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: pagelink\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(Nav, \"dDhHMM+36cHI0QaKQVzD+0hqaos=\");\n\n_c = Nav;\n\nvar _c;\n\n$RefreshReg$(_c, \"Nav\");","map":{"version":3,"sources":["/home/alias/usfm/landingv1.2/src/components/nav/index.js"],"names":["useEffect","useState","navdata","DesktopNav","MobileNav","Home","BrowserRouter","Router","Switch","Route","Link","Nav","navstate","setnavstate","windowstate","setwindowstate","navinit","window","innerWidth","pages","map","pagelink","index"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AAEA,OAAOC,IAAP,MAAiB,kBAAjB;AAEA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,EAAiDC,IAAjD,QAA6D,kBAA7D;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,EAAxC;AACA,QAAM,CAACa,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,CAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAegB,OAAf,GAAyB;AACvB,YAAMH,WAAW,CAACX,OAAD,CAAjB;AAEA,YAAMa,cAAc,CAACE,MAAM,CAACC,UAAR,CAApB;AACD;;AACDF,IAAAA,OAAO;AACR,GAPQ,EAON,EAPM,CAAT;;AASA,MAAIF,WAAW,GAAG,GAAlB,EAAuB;AACrB,wBACE,QAAC,MAAD;AAAA,6BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GAND,MAMO;AACL,wBACE,QAAC,MAAD;AAAA,8BAEE,QAAC,UAAD;AAAY,QAAA,QAAQ,EAAEF;AAAtB;AAAA;AAAA;AAAA;AAAA,cAFF,EAILA,QAAQ,CAACO,KAAT,CAAeC,GAAf,CAAmB,CAACC,QAAD,EAAWC,KAAX,KAAmB;AACnC,4BACI;AAAA,oBAAKD;AAAL;AAAA;AAAA;AAAA;AAAA,gBADJ;AAGH,OAJA,CAJK;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;AACF;;GAlCuBV,G;;KAAAA,G","sourcesContent":["import { useEffect, useState } from \"react\";\nimport navdata from \"./json/nav.json\";\nimport DesktopNav from \"./desktop/index\";\nimport MobileNav from \"./mobile/index\";\n\nimport Home from \"../../pages/home\";\n\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nexport default function Nav() {\n  const [navstate, setnavstate] = useState();\n  const [windowstate, setwindowstate] = useState(0);\n\n  useEffect(() => {\n    async function navinit() {\n      await setnavstate(navdata);\n\n      await setwindowstate(window.innerWidth);\n    }\n    navinit();\n  }, []);\n\n  if (windowstate < 600) {\n    return (\n      <Router>\n        <MobileNav />\n      </Router>\n    );\n  } else {\n    return (\n      <Router>\n       \n        <DesktopNav navstate={navstate} />\n\n{navstate.pages.map((pagelink, index)=>{\n    return(\n        <h1>{pagelink}</h1>\n    )\n})}\n        \n      </Router>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}